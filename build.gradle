buildscript {
    repositories {
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }

    dependencies {
        classpath('org.springframework.build.gradle:propdeps-plugin:0.0.7')
        classpath('io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE')
        classpath('io.spring.gradle:spring-io-plugin:0.0.8.RELEASE')
        classpath('io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

repositories {
    maven { url 'https://repo.spring.io/libs-milestone-local' }
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Dalston.RELEASE'
    }
}

javadoc {
    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.author = true
    options.header = project.name
}

task packageSources(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives packageSources
    archives javadocJar
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-oauth2') {
        exclude(module: 'spring-security-oauth2')
    }
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.2.0.RC1'
    compile 'org.springframework.cloud:spring-cloud-spring-service-connector'
    compile 'org.springframework.cloud:spring-cloud-cloudfoundry-connector'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-cloudfoundry-connector', classifier: 'tests'
    testCompile group: 'io.specto', name: 'hoverfly-java', version: '0.8.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}

archivesBaseName = 'spring-cloud-sso-connector'
group = 'io.pivotal.spring.cloud'

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

uploadArchives {
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: ossrhUsername, password: ossrhPassword)
        }

        pom.project {
            name 'Spring Cloud SSO Connector'
            description 'Spring Cloud Connector Extension for Single Sign-On Service on Pivotal Cloud Foundry'
            url 'https://github.com/pivotal-cf/spring-cloud-sso-connector/'
            inceptionYear '2015'
            licenses {
                license {
                    name 'The Apache License, Version 2.0'
                    url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'jar'
                }
            }
            scm {
                connection 'scm:git:git@github.com:pivotal-cf/spring-cloud-sso-connector.git'
                developerConnection 'scm:git:git@github.com:pivotal-cf/spring-cloud-sso-connector.git'
                url 'https://github.com/pivotal-cf/spring-cloud-sso-connector/'
            }
            developers {
                developer {
                    organization 'Pivotal Software Inc'
                    organizationUrl 'https://pivotal.io'
                }
            }
        }
    }
}

nexusStaging {
    packageGroup = 'io.pivotal'
}
